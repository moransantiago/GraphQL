# Valida los tipos de nivel
enum Level {
  Begginer
  Intermediate
  Advanced
}

# GET

type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String @deprecated
  people: [Student]
  level: Level
}

interface Person {
  _id: ID!
  name: String!
  email: String!
}

type Student implements Person {
  _id: ID!
  name: String!
  email: String!
  avatar: String
}

type Monitor implements Person {
  _id: ID!
  name: String!
  email: String!
  phone: String
}

# INPUT

input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
  level: Level
}

input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
  level: Level
}

input PersonInput {
  name: String!
  email: String!
  avatar: String
  phone: String
}

input PersonEditInput {
  name: String
  email: String
  avatar: String
  phone: String
}

# QUERY

type Query {
  "Returns every course"
  getCourses: [Course]
  "Returns a course"
  getCourse(id: ID!): Course
  "Returns every student"
  getPeople: [Person]
  "Returns a student"
  getPerson(id: ID!): Person
}

# MUTATION

type Mutation {
  "Creates a course"
  createCourse(input: CourseInput!): Course
  "Edits a course"
  editCourse(id: ID!, input: CourseEditInput): Course
  "Deletes a course"
  deleteCourse(id: ID!): ID
  "Creates a person"
  createPerson(input: PersonInput!): Person
  "Edits a person"
  editPerson(id: ID!, input: PersonEditInput): Person
  "Deletes a person"
  deletePerson(id: ID!): ID
  "Adds a person to a course"
  addPeople(courseId: ID!, personId: ID!): Course
}
